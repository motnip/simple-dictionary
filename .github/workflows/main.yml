# This is a basic workflow to help you get started with Actions

name: sermo-be
# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      #- name: Lint
      #  run: golint ./...
      - name: Build
        run: go build -v ./...
  test:
      #This jobs depends on build jobs!
      needs: build
      runs-on: ubuntu-latest
      #TOMAS: I add this steps to checkout the code. But would be interesting
      #to get the artifact from the previous job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        #Yes we can, look at https://docs.github.com/en/actions/learn-github-actions/managing-complex-workflows
        - uses: actions/checkout@v2
        - name: Set up Go
          uses: actions/setup-go@v2
          with:
            go-version: 1.16
        - name: Test
          run: go test -v ./... -v -cover -failfast
